#include "EasyBMP.h"
using namespace std;

void colorToGray(BMP & Output)
{
    int picWidth = Output.TellWidth();
    int picHeight = Output.TellHeight(); Output.SetBitDepth(1); //compression happens here

    for (int i = 0; i < picWidth-1; ++i)
        for (int j = 0; j < picHeight-1; ++j)
        {
	  //int col = 0.1* Output(i, j)->Blue + 0.6*Output(i,j)->Green +0.3* Output(i,j)->Red;
	  //if (col > 127)
                Output(i,j)->Red = 0;
                Output(i,j)->Blue = 0;
                Output(i,j)->Green = 0;
        }
}
int main()
{
    BMP myImage;
    myImage.SetSize(256,256);

    for (int i = 0; i < 256; i++)
      {
	for (int j = 0; j < 256; j++)
	  {
	    if (((i/32) + (j/32)) % 2 == 0)
	      {
		myImage(i,j)->Red = 255;
                myImage(i,j)->Blue = 0;
                myImage(i,j)->Green = 0;
	      }
	    else
	      {
		myImage(i,j)->Red = 0;
                myImage(i,j)->Blue = 0;
                myImage(i,j)->Green = 0;
	      }
	  }
      }

    myImage.WriteToFile("myImageAfter.bmp");
    return 0;
}
